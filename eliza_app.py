import streamlit as st
import re
import random

# Eliza Turkish Class
class ElizaTurkish:
    def __init__(self):
        self.keys = list(map(lambda x: re.compile(x[0], re.IGNORECASE), gPatsTurkish))
        self.values = list(map(lambda x: x[1], gPatsTurkish))

    def translate(self, text, vocabulary):
        words = text.lower().split()
        keys = vocabulary.keys()
        for i in range(len(words)):
            if words[i] in keys:
                words[i] = vocabulary[words[i]]
        return ' '.join(words)

    def respond(self, text):
        for i in range(len(self.keys)):
            match = self.keys[i].match(text)
            if match:
                resp = random.choice(self.values[i])
                pos = resp.find('%')
                while pos > -1:
                    num = int(resp[pos+1:pos+2])
                    resp = resp[:pos] + self.translate(match.group(num), gReflectionsTurkish) + resp[pos+2:]
                    pos = resp.find('%')
                if resp[-2:] == '?.': resp = resp[:-2] + '.'
                if resp[-2:] == '??': resp = resp[:-2] + '?'
                return resp
        return "Bunu tam olarak anlayamadÄ±m, biraz daha aÃ§abilir misin?"

# Geri dÃ¶nÃ¼ÅŸÃ¼m sÃ¶zlÃ¼ÄŸÃ¼
gReflectionsTurkish = {
  "ben": "sen",
  "benim": "senin",
  "bana": "sana",
  "bende": "sende",
  "benden": "senden",
  "sen": "ben",
  "senin": "benim",
  "sana": "bana",
  "sende": "bende",
  "seninki": "benimki",
  "benimki": "seninki"
}

# Eliza'nÄ±n yanÄ±t desenleri
gPatsTurkish = [
  [r'Benim (.*) ihtiyacÄ±m var', 
   ["Neden %1 ihtiyacÄ±n var?", "GerÃ§ekten %1 sana yardÄ±mcÄ± olur mu?"]],
  [r'Ben (.*)', 
   ["Bana geldiÄŸin sebep %1 olman mÄ±?", "Ne zamandan beri %1sin?"]],
  [r'Ne (.*)', 
   ["Neden bunu soruyorsun?", "Sen ne dÃ¼ÅŸÃ¼nÃ¼yorsun?"]],
  [r'NasÄ±l (.*)', 
   ["Sence nasÄ±l?", "GerÃ§ekten neyi sormak istiyorsun?"]],
  [r'Evet', 
   ["OldukÃ§a emin gÃ¶rÃ¼nÃ¼yorsun.", "Tamam, ancak biraz daha ayrÄ±ntÄ±lÄ± anlatabilir misin?"]],
  [r'Ã§Ä±kÄ±ÅŸ', 
   ["Benimle konuÅŸtuÄŸun iÃ§in teÅŸekkÃ¼r ederim.", "HoÅŸÃ§a kal."]],
  [r'(.*)', 
   ["LÃ¼tfen bana daha fazla anlat.", "Bunu biraz aÃ§abilir misin?", "Neden bÃ¶yle dÃ¼ÅŸÃ¼nÃ¼yorsun?"]]
]

# Streamlit UI
st.title("ğŸ§  ELIZA - TÃ¼rkÃ§e Terapi Botu")
st.write("Merhaba! BugÃ¼n nasÄ±l hissediyorsun?")

# KullanÄ±cÄ± giriÅŸi
user_input = st.text_input("Sen:", "")

if "chat_history" not in st.session_state:
    st.session_state.chat_history = []

if st.button("GÃ¶nder") and user_input:
    eliza = ElizaTurkish()
    response = eliza.respond(user_input)
    
    # Sohbet geÃ§miÅŸine ekle
    st.session_state.chat_history.append(("Sen", user_input))
    st.session_state.chat_history.append(("Eliza", response))

# Sohbet geÃ§miÅŸini gÃ¶ster
for speaker, text in st.session_state.chat_history:
    st.write(f"**{speaker}:** {text}")


